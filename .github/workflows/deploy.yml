name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Create deployment directory
        run: |
          echo "📁 Creating deployment directory..."
          New-Item -ItemType Directory -Force -Path "C:\wa-baileys-erp"
          echo "✅ Deployment directory ready"

      - name: Backup current deployment
        run: |
          if (Test-Path "C:\wa-baileys-erp") {
            echo "💾 Creating backup..."
            $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
            Copy-Item -Path "C:\wa-baileys-erp" -Destination "C:\wa-baileys-erp.backup.$timestamp" -Recurse -Force
            echo "✅ Backup created"
          }

      - name: Stop current application
        run: |
          echo "🛑 Stopping current application..."
          try {
            pm2 stop wa-baileys-erp
            echo "✅ Application stopped"
          } catch {
            echo "ℹ️ No running application found"
          }

      - name: Copy new application files
        run: |
          echo "📋 Copying application files..."
          Copy-Item -Path "dist\*" -Destination "C:\wa-baileys-erp\" -Recurse -Force
          Copy-Item -Path "package.json" -Destination "C:\wa-baileys-erp\" -Force
          if (Test-Path "ecosystem.config.js") {
            Copy-Item -Path "ecosystem.config.js" -Destination "C:\wa-baileys-erp\" -Force
          }
          echo "✅ Files copied"

      - name: Install production dependencies
        run: |
          echo "📦 Installing production dependencies..."
          Set-Location "C:\wa-baileys-erp"
          npm ci --only=production
          echo "✅ Dependencies installed"

      - name: Create necessary directories
        run: |
          echo "📁 Creating necessary directories..."
          New-Item -ItemType Directory -Force -Path "C:\wa-baileys-erp\uploads"
          New-Item -ItemType Directory -Force -Path "C:\wa-baileys-erp\auth_info_baileys"
          echo "✅ Directories created"

      - name: Start application
        run: |
          echo "🚀 Starting application..."
          Set-Location "C:\wa-baileys-erp"
          try {
            pm2 restart wa-baileys-erp
            echo "✅ Application restarted"
          } catch {
            pm2 start ecosystem.config.js --name wa-baileys-erp
            echo "✅ Application started"
          }

      - name: Wait for application to start
        run: |
          echo "⏳ Waiting for application to start..."
          Start-Sleep -Seconds 10

      - name: Verify deployment
        run: |
          echo "🔍 Verifying deployment..."
          $maxAttempts = 5
          $attempt = 1

          while ($attempt -le $maxAttempts) {
            echo "Attempt $attempt/$maxAttempts"
            try {
              $response = Invoke-WebRequest -Uri "http://localhost:3000/api/status" -UseBasicParsing -TimeoutSec 5
              if ($response.StatusCode -eq 200) {
                echo "✅ Deployment successful! Application is responding"
                break
              }
            } catch {
              echo "⏳ Application not ready yet, waiting..."
              Start-Sleep -Seconds 5
              $attempt++
            }
          }

          if ($attempt -gt $maxAttempts) {
            echo "❌ Deployment failed: Application not responding after $maxAttempts attempts"
            echo "📋 PM2 Status:"
            pm2 list
            echo "📋 PM2 Logs:"
            pm2 logs wa-baileys-erp --lines 20
            exit 1
          }

      - name: Cleanup old backups
        run: |
          echo "🧹 Cleaning up old backups..."
          $backups = Get-ChildItem -Path "C:\" -Filter "wa-baileys-erp.backup.*" -Directory | Where-Object { $_.LastWriteTime -lt (Get-Date).AddDays(-7) }
          foreach ($backup in $backups) {
            Remove-Item -Path $backup.FullName -Recurse -Force
          }
          echo "✅ Cleanup completed"

      - name: Deployment summary
        run: |
          echo "🎉 Deployment Summary:"
          echo "📁 Application location: C:\wa-baileys-erp"
          echo "🌐 Application URL: http://localhost:3000"
          echo "📊 PM2 Status:"
          pm2 list
          echo "✅ Deployment completed successfully!"
